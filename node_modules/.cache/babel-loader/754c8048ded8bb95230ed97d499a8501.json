{"ast":null,"code":"import { call, all, takeLatest, put, select } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { getInvestimentosSuccess } from './actions';\nimport { InvestimentoTypes } from './types';\n\nfunction* getInvestimentos() {\n  const investimentosData = yield call(api.get, '');\n  yield put(getInvestimentosSuccess(investimentosData.data));\n}\n\nfunction* addInvestimento({\n  payload\n}) {\n  const investimentos = yield select(state => state.investimento.investimentos);\n  const newInvestimento = {\n    opcao: payload.opcao,\n    valor: payload.valor,\n    data: payload.data\n  };\n  yield call(api.post, '', newInvestimento);\n  const updatedInvestimentos = [newInvestimento, ...investimentos];\n  yield put(getInvestimentosSuccess(updatedInvestimentos));\n}\n\nfunction* removeInvestimento({\n  payload\n}) {\n  const investimentos = yield select(state => state.investimento.investimentos);\n  const updatedInvestimentos = investimentos.filter(investimento => investimento._id != payload._id);\n  yield call(api.delete, payload._id);\n  yield put(getInvestimentosSuccess(updatedInvestimentos));\n}\n\nexport default all([takeLatest(InvestimentoTypes.GET_INVESTIMENTOS_REQUEST, getInvestimentos), takeLatest(InvestimentoTypes.ADD_INVESTIMENTO_REQUEST, addInvestimento), takeLatest(InvestimentoTypes.REMOVE_INVESTIMENTO_REQUEST, removeInvestimento)]);","map":{"version":3,"sources":["/home/beatriz/Documents/gorilapp/gorilapp_front/src/store/modules/investimento/sagas.tsx"],"names":["call","all","takeLatest","put","select","api","getInvestimentosSuccess","InvestimentoTypes","getInvestimentos","investimentosData","get","data","addInvestimento","payload","investimentos","state","investimento","newInvestimento","opcao","valor","post","updatedInvestimentos","removeInvestimento","filter","_id","delete","GET_INVESTIMENTOS_REQUEST","ADD_INVESTIMENTO_REQUEST","REMOVE_INVESTIMENTO_REQUEST"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,MAArC,QAAmD,oBAAnD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,uBAAT,QAAuC,WAAvC;AAKA,SAASC,iBAAT,QAAoD,SAApD;;AAEA,UAAUC,gBAAV,GAA6B;AACzB,QAAMC,iBAAiB,GAAG,MAAMT,IAAI,CAACK,GAAG,CAACK,GAAL,EAAU,EAAV,CAApC;AACA,QAAMP,GAAG,CAACG,uBAAuB,CAACG,iBAAiB,CAACE,IAAnB,CAAxB,CAAT;AACH;;AAED,UAAUC,eAAV,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAA+C;AAC3C,QAAMC,aAAa,GAAE,MAAMV,MAAM,CAAEW,KAAD,IAA6BA,KAAK,CAACC,YAAN,CAAmBF,aAAjD,CAAjC;AACA,QAAMG,eAAe,GAAG;AACpBC,IAAAA,KAAK,EAAEL,OAAO,CAACK,KADK;AAEpBC,IAAAA,KAAK,EAAEN,OAAO,CAACM,KAFK;AAGpBR,IAAAA,IAAI,EAAEE,OAAO,CAACF;AAHM,GAAxB;AAMA,QAAMX,IAAI,CAACK,GAAG,CAACe,IAAL,EAAW,EAAX,EAAeH,eAAf,CAAV;AAEA,QAAMI,oBAAoB,GAAG,CAACJ,eAAD,EAAkB,GAAGH,aAArB,CAA7B;AACA,QAAMX,GAAG,CAACG,uBAAuB,CAACe,oBAAD,CAAxB,CAAT;AACH;;AAED,UAAUC,kBAAV,CAA6B;AAACT,EAAAA;AAAD,CAA7B,EAAkD;AAC9C,QAAMC,aAAa,GAAG,MAAMV,MAAM,CAAEW,KAAD,IAA6BA,KAAK,CAACC,YAAN,CAAmBF,aAAjD,CAAlC;AACA,QAAMO,oBAAoB,GAAGP,aAAa,CAACS,MAAd,CAAsBP,YAAD,IAAoCA,YAAY,CAACQ,GAAb,IAAkBX,OAAO,CAACW,GAAnF,CAA7B;AACA,QAAMxB,IAAI,CAACK,GAAG,CAACoB,MAAL,EAAaZ,OAAO,CAACW,GAArB,CAAV;AACA,QAAMrB,GAAG,CAACG,uBAAuB,CAACe,oBAAD,CAAxB,CAAT;AACH;;AAED,eAAepB,GAAG,CAAC,CACfC,UAAU,CAACK,iBAAiB,CAACmB,yBAAnB,EAA8ClB,gBAA9C,CADK,EAEfN,UAAU,CAACK,iBAAiB,CAACoB,wBAAnB,EAA6Cf,eAA7C,CAFK,EAGfV,UAAU,CAACK,iBAAiB,CAACqB,2BAAnB,EAAgDN,kBAAhD,CAHK,CAAD,CAAlB","sourcesContent":["import { call, all, takeLatest, put, select } from 'redux-saga/effects'\nimport api from '../../../services/api'\n\nimport { getInvestimentosSuccess} from './actions'\nimport { AnyAction } from 'redux'\n\nimport { ApplicationState } from '../../index'\n\nimport { InvestimentoTypes, InvestimentoData } from './types'\n\nfunction* getInvestimentos() {\n    const investimentosData = yield call(api.get, '')\n    yield put(getInvestimentosSuccess(investimentosData.data))\n}\n\nfunction* addInvestimento({payload}: AnyAction){\n    const investimentos= yield select((state: ApplicationState) => state.investimento.investimentos)\n    const newInvestimento = {\n        opcao: payload.opcao,\n        valor: payload.valor,\n        data: payload.data\n    }\n\n    yield call(api.post, '', newInvestimento)\n\n    const updatedInvestimentos = [newInvestimento, ...investimentos]    \n    yield put(getInvestimentosSuccess(updatedInvestimentos))\n}\n\nfunction* removeInvestimento({payload}: AnyAction){\n    const investimentos = yield select((state: ApplicationState) => state.investimento.investimentos )\n    const updatedInvestimentos = investimentos.filter((investimento: InvestimentoData) => investimento._id!=payload._id)\n    yield call(api.delete, payload._id)\n    yield put(getInvestimentosSuccess(updatedInvestimentos))\n}\n\nexport default all([\n    takeLatest(InvestimentoTypes.GET_INVESTIMENTOS_REQUEST, getInvestimentos),\n    takeLatest(InvestimentoTypes.ADD_INVESTIMENTO_REQUEST, addInvestimento),\n    takeLatest(InvestimentoTypes.REMOVE_INVESTIMENTO_REQUEST, removeInvestimento),\n  ])"]},"metadata":{},"sourceType":"module"}